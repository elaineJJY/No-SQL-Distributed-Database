syntax = "proto3";

option java_multiple_files = false;
option java_package = "de.tum.grpc_api";
option java_outer_classname = "ECSProto";

message NodeMessage {
    string host = 1;
    int32 port = 2;
}

// Service for ECS to register KVServer
message RegisterRequest {
    NodeMessage IpPort = 1;
}

message RegisterResponse {
    map<string, NodeMessage> ring = 1; //<nodeHash, Node>
}

// Service for ECS to update all KVServers
message UpdateRequest {
    map<string, NodeMessage> ring = 1;
}

message UpdateResponse {
    bool isSuccess = 1;
}

service ECSService {
    rpc register(RegisterRequest) returns (RegisterResponse); // register new KVServer to ECS

    //rpc recover(KVRequest) returns (KVResponse);
    rpc update(UpdateRequest) returns (UpdateResponse); // update all nodes with latest ring
}


